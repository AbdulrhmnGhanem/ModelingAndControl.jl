function TheSignal = CalcMultisine(ExcitedHarm, N, AmplExcitedHarm);%%       TheSignal = CalcMultisine(ExcitedHarm, N, AmplExcitedHarm)%%       Calculates one period of a random phase multisine with rms value 1%%   OUTPUT%       TheSignal           =	one period of the time domain signal%                               rms value equals one %%   INPUT%       ExcitedHarm         =	excited harmonics of the multisine expressed in harmonic number%       N                   =	number of time domain samples in one period%       AmplExcitedHarm     =   optional parameter: amplitudes of the excited harmonics; %                               default value: uniform%% Rik Pintelon, March 2006% version March 2008%if nargin == 2    AmplExcitedHarm = ones(size(ExcitedHarm));end % if no amplitudes are given% calculation time domain signalS = zeros(N,1);S(ExcitedHarm + 1) = AmplExcitedHarm .* exp(sqrt(-1)*2*pi*rand(size(ExcitedHarm)));TheSignal = 2*real(ifft(S));TheSignal = TheSignal/std(TheSignal);  % rms value = 1